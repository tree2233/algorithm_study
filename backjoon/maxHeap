#include <iostream>

#define MAX_NUM 100000

using namespace std;

long long heap[MAX_NUM], cnt;

void swap(long long &a, long long &b) {
    long long temp = a;
    a = b;
    b = temp;
}

void push(long long num) {
    int child, parent;
    
    heap[++cnt] = num;

    child = cnt;
    parent = child/2;

    while(heap[parent] < heap[child]&&child > 1) {
        swap(heap[parent], heap[child]);

        child = parent;
        parent = child/2;
    }
}

long long pop() {
    int parent, child;

    cout << heap[1] << '\n';
          
    heap[1] = heap[cnt];
    cnt--;

    parent = 1;
    child = parent*2;

    if(parent*2+1 <= cnt) {
        child = heap[parent*2] > heap[parent*2+1] ? parent*2 : parent*2+1;
    }

    while(child <= cnt&&heap[parent] < heap[child]) {
        swap(heap[parent], heap[child]);

        parent = child;
        child = parent*2;

        if(parent*2+1 <= cnt) {
            child = heap[parent*2] > heap[parent*2+1] ? parent*2 : parent*2+1;
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int N;
    long long num;

    cin >> N;

    while(N--) {
        cin >> num;
        if(!num) {
            if(!cnt) {
                cout << 0 << '\n';
            }
            else {
                cout << pop() << '\n';
            }
        }
        else {
            push(num);
        }
    }

    return 0;
}
