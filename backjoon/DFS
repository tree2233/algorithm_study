void DFS(int v, int n) {
    for(int nextNode = 1 ; nextNode <= n; nextNode++) {
        if(checkDFS[nextNode] == 0 && matrix[v][nextNode] == 1) {
            DFSdeque.push_back(nextNode);
            DFSstack.push(v);
            checkDFS[nextNode] = 1;

            DFS(nextNode, n);

            if(!DFSstack.empty()) {
                v = DFSstack.top();
                DFSstack.pop();
            }
        }
    }
}

/*
1. 순차 탐색 및 stack에 현재 탐색중인 노드 저장
1-2. 탐색한 값 기준 새로운 DFS 실행
1-3. 더 탐색할 곳이 없으면 stack.top을 꺼내고 이전 DFS로 복귀
2. stack이 빌 때까지 반복
*/
