#include <iostream>

using namespace std;

typedef struct _sNode{
    struct _node* nextNode;
    int data;
}sNode;

typedef struct _stack{
    sNode* top;
    int cur;
}stack;

void sInit(stack*s);
void sPush(stack*s, int num);
int sPop(stack*s);
bool sIsEmpty(stack*s);
int sTop(stack*s);
int sSize(stack*s);

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
}

void sInit(stack* s) {
    s->top = NULL;
    s->cur = 0;
}

bool sIsEmpty(stack* s) {
    return s->cur == 0;
}

void sPush(stack* s, int data) {
    sNode* temp = new node;
    temp->data = data;
    temp->nextNode = s->top;
    
    s->top = temp;
    s->cur++;
}

int sPop(stack* s) {
    if(isEmpty(s))
        return -1;
    
    sNode* temp = s->top;
    int data = temp->data;
    
    s->top = temp->nextNode;
    s->cur--;
    return data;
}

int sSize(stack* s) {
    return s->cur;
}

int sTop(stack* s) {
    if(isEmpty(s))
        return -1;
        
    return s->top->data;
}
