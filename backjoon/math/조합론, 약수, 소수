1. 이항계수 구하기
nCr을 구한다고 칠 때(n -> n-r+1까지 곱하면서 1 -> n까지 나눌 때)
n에서 내림순, 1에서 올림순의 순서대로 곱하고 나누면 나눗셈으로 인한 소숫점 버림으로 발생하는 오차가 생기지 않는다.
잘 생각해보자 2를 나누는 차례에선 이미 n과 n-1이 곱해진 상태이다. 
즉 나열된 숫자 2개가 곱해졌기 때문에 둘 중 하나는 무조건 2의 배수가 존재한다. 
그 다음 n-2까지 곱하고 3을 나눌 차례다 총 3개의 나열된 수가 곱해졌기 때문에 3개의 숫자중 1개는 무조건 3의 배수가 된다.
이렇게 4의 배수, 5의 배수도 계속해서 1개 이상은 무조건 존재할 수밖에 없기 때문에 소숫점 버림이 발생하지 않는다.

2. 0! = 1
nC0 = 1이잖아 그런데 nC0 = n!/n!(n-n)! 이거든 (n-n)! = 0! 이니 0! = 1이라 정의하는 거다.

3. 유클리드 호제법
A, B가 주어졌을 때, 나누어 떨어지지 않는다면 작은 값으로 큰 값을 나눈 나머지를 R이라 한다. 
A(or B) 와 R이 나누어 떨어지는게 확인, 떨어지지 않는다면 다시 작은 조각으로 큰 조각을 나눈 나머지로 떨어질 때까지 반복한다. 
이렇게 반복하면 작은 조각이 큰 조각이 나눌 수 있을 때, 이미 이전 것들은 큰 조각으로 전부 나눌 수 있는 것들의 집합이니 작은 조각도 나머지를 전부 나눌 수 있게 된다. (GCD는 재귀함수(큰 값, 나눌 값)의 형태로 편하게 구현이 가능하다.)

4. 최소공배수
A, B의 최소공배수는 A*B/최대공약수가 된다. 
최대 공약수의 인수들은 어차피 똑같이 가지고 있기 때문에 공배수가 인수들을 2배로 가지지 않으면 A, B롤 동시에 나눠지면서 최소인 배수가 된다. 
A, B가 동시에 가지고 있지 않은 것들의 곱 + 최대공약수 1번이 최소공배수다.
